{
  "runtime": "bun",
  "code": "console.log('üöÄ Setting up TypeScript project...'); setTimeout(() => { console.log('‚úÖ Project ready!'); }, 2000);",
  "entry_point": "bun dev",
  "timeout_ms": 3600000,
  "memory_limit_mb": 1024,
  "mode": "persistent",
  "install_deps": true,
  "dev_server": true,
  "env_vars": {
    "NODE_ENV": "development",
    "PORT": "3000"
  },
  "files": [
    {
      "path": "package.json",
      "content": "{\n  \"name\": \"my-typescript-project\",\n  \"version\": \"1.0.0\",\n  \"scripts\": {\n    \"dev\": \"bun run --hot src/index.tsx\",\n    \"build\": \"bun build src/index.tsx --outdir=dist\",\n    \"start\": \"bun run src/index.tsx\",\n    \"preview\": \"bun run build && bun run dist/index.js\"\n  },\n  \"dependencies\": {\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"^18.2.0\",\n    \"@types/react-dom\": \"^18.2.0\",\n    \"typescript\": \"^5.0.0\"\n  }\n}"
    },
    {
      "path": "tsconfig.json",
      "content": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"lib\": [\"DOM\", \"DOM.Iterable\", \"ES6\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"esModuleInterop\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"noEmit\": true,\n    \"jsx\": \"react-jsx\"\n  },\n  \"include\": [\"src\"]\n}"
    },
    {
      "path": "src/index.tsx",
      "content": "import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './styles.css';\n\nconsole.log('üöÄ Starting TypeScript React App...');\n\nconst container = document.getElementById('root');\nif (container) {\n  const root = createRoot(container);\n  root.render(<App />);\n  console.log('‚úÖ App mounted successfully!');\n} else {\n  console.error('‚ùå Root container not found');\n}"
    },
    {
      "path": "src/App.tsx",
      "content": "import React, { useState } from 'react';\nimport Page from './Page';\n\nconst App: React.FC = () => {\n  const [count, setCount] = useState(0);\n  const [currentPage, setCurrentPage] = useState<'home' | 'about'>('home');\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>üéØ My TypeScript Sandbox Project</h1>\n        <p>Running in persistent container with hot reload!</p>\n        <nav>\n          <button \n            onClick={() => setCurrentPage('home')}\n            className={currentPage === 'home' ? 'active' : ''}\n          >\n            Home\n          </button>\n          <button \n            onClick={() => setCurrentPage('about')}\n            className={currentPage === 'about' ? 'active' : ''}\n          >\n            About\n          </button>\n        </nav>\n      </header>\n      \n      <main className=\"app-main\">\n        <div className=\"counter-section\">\n          <h2>Interactive Counter</h2>\n          <div className=\"counter\">\n            <button onClick={() => setCount(count - 1)}>-</button>\n            <span className=\"count\">{count}</span>\n            <button onClick={() => setCount(count + 1)}>+</button>\n          </div>\n          <p>Count: {count}</p>\n        </div>\n        \n        <Page currentPage={currentPage} />\n      </main>\n      \n      <footer className=\"app-footer\">\n        <p>‚úÖ TypeScript ‚Ä¢ ‚úÖ React ‚Ä¢ ‚úÖ Bun ‚Ä¢ ‚úÖ Hot Reload</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;"
    },
    {
      "path": "src/Page.tsx",
      "content": "import React from 'react';\n\ninterface PageProps {\n  currentPage: 'home' | 'about';\n}\n\nconst Page: React.FC<PageProps> = ({ currentPage }) => {\n  const renderContent = () => {\n    switch (currentPage) {\n      case 'home':\n        return (\n          <div className=\"page-content\">\n            <h2>üè† Welcome Home!</h2>\n            <p>This is your TypeScript project running in a secure sandbox.</p>\n            <div className=\"features\">\n              <h3>Features:</h3>\n              <ul>\n                <li>‚úÖ Multi-file TypeScript project</li>\n                <li>‚úÖ Automatic dependency installation</li>\n                <li>‚úÖ Persistent container (keeps running)</li>\n                <li>‚úÖ Hot reload with Bun</li>\n                <li>‚úÖ React components with TypeScript</li>\n                <li>‚úÖ CSS styling</li>\n                <li>‚úÖ Development server</li>\n              </ul>\n            </div>\n          </div>\n        );\n      case 'about':\n        return (\n          <div className=\"page-content\">\n            <h2>‚ÑπÔ∏è About This Project</h2>\n            <p>This demonstrates the complete sandbox workflow:</p>\n            <div className=\"workflow\">\n              <h3>Workflow:</h3>\n              <ol>\n                <li>üìÅ Transfer multiple files (App.tsx, Page.tsx, styles.css)</li>\n                <li>üì¶ Automatic <code>bun install</code></li>\n                <li>üöÄ Start development server</li>\n                <li>üîÑ Hot reload enabled</li>\n                <li>üèÉ Keep running until manually stopped</li>\n              </ol>\n            </div>\n            <div className=\"tech-stack\">\n              <h3>Tech Stack:</h3>\n              <ul>\n                <li>TypeScript 5.0</li>\n                <li>React 18</li>\n                <li>Bun runtime</li>\n                <li>Docker container</li>\n              </ul>\n            </div>\n          </div>\n        );\n      default:\n        return <div>Page not found</div>;\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default Page;"
    },
    {
      "path": "src/styles.css",
      "content": "/* Reset and base styles */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n  line-height: 1.6;\n  color: #333;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  min-height: 100vh;\n}\n\n.app {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n/* Header */\n.app-header {\n  background: white;\n  padding: 30px;\n  border-radius: 15px;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.1);\n  margin-bottom: 30px;\n  text-align: center;\n}\n\n.app-header h1 {\n  color: #2c3e50;\n  font-size: 2.5em;\n  margin-bottom: 10px;\n  font-weight: 700;\n}\n\n.app-header p {\n  color: #7f8c8d;\n  font-size: 1.1em;\n  margin-bottom: 20px;\n}\n\n.app-header nav {\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n}\n\n.app-header nav button {\n  background: #3498db;\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 1em;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.app-header nav button:hover {\n  background: #2980b9;\n  transform: translateY(-2px);\n}\n\n.app-header nav button.active {\n  background: #e74c3c;\n  box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);\n}\n\n/* Main content */\n.app-main {\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: 30px;\n  flex: 1;\n  margin-bottom: 30px;\n}\n\n/* Counter section */\n.counter-section {\n  background: white;\n  padding: 30px;\n  border-radius: 15px;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.1);\n  text-align: center;\n  height: fit-content;\n}\n\n.counter-section h2 {\n  color: #2c3e50;\n  margin-bottom: 20px;\n  font-size: 1.8em;\n}\n\n.counter {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.counter button {\n  background: #e74c3c;\n  color: white;\n  border: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  font-size: 1.5em;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.counter button:hover {\n  background: #c0392b;\n  transform: scale(1.1);\n}\n\n.count {\n  font-size: 2em;\n  font-weight: bold;\n  color: #2c3e50;\n  min-width: 60px;\n}\n\n/* Page content */\n.page {\n  background: white;\n  padding: 30px;\n  border-radius: 15px;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.1);\n}\n\n.page-content h2 {\n  color: #2c3e50;\n  margin-bottom: 20px;\n  font-size: 1.8em;\n}\n\n.page-content p {\n  color: #555;\n  margin-bottom: 20px;\n  font-size: 1.1em;\n}\n\n.features, .workflow, .tech-stack {\n  margin-top: 25px;\n}\n\n.features h3, .workflow h3, .tech-stack h3 {\n  color: #34495e;\n  margin-bottom: 15px;\n  font-size: 1.3em;\n}\n\n.features ul, .tech-stack ul {\n  list-style: none;\n  padding: 0;\n}\n\n.features li, .tech-stack li {\n  padding: 8px 0;\n  border-bottom: 1px solid #ecf0f1;\n  font-size: 1.05em;\n}\n\n.features li:last-child, .tech-stack li:last-child {\n  border-bottom: none;\n}\n\n.workflow ol {\n  padding-left: 20px;\n}\n\n.workflow li {\n  margin-bottom: 10px;\n  font-size: 1.05em;\n}\n\n.workflow code {\n  background: #f8f9fa;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-family: 'Monaco', 'Menlo', monospace;\n  color: #e74c3c;\n}\n\n/* Footer */\n.app-footer {\n  background: #34495e;\n  color: white;\n  padding: 20px;\n  text-align: center;\n  border-radius: 15px;\n  margin-top: auto;\n}\n\n.app-footer p {\n  font-size: 1.1em;\n  font-weight: 500;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .app-main {\n    grid-template-columns: 1fr;\n  }\n  \n  .app-header nav {\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .app-header nav button {\n    width: 200px;\n  }\n  \n  .counter {\n    gap: 15px;\n  }\n  \n  .counter button {\n    width: 40px;\n    height: 40px;\n    font-size: 1.2em;\n  }\n  \n  .count {\n    font-size: 1.5em;\n  }\n}"
    },
    {
      "path": "public/index.html",
      "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>TypeScript Sandbox Project</title>\n  <meta name=\"description\" content=\"A TypeScript React project running in a secure sandbox environment\">\n  <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üöÄ</text></svg>\">\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"module\" src=\"/src/index.tsx\"></script>\n</body>\n</html>"
    }
  ]
}